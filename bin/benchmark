#!/usr/bin/env ruby
# frozen_string_literal: true

require "benchmark"
require "globalid"

GlobalID.app = "UniversalID"
SignedGlobalID.app = "UniversalID"
SignedGlobalID.verifier = GlobalID::Verifier.new("UniversalID")

require_relative "../lib/universalid"
require_relative "../test/models"

campaign = Campaign.new(name: "Example Campaign", description: "Example Description", trigger: "Sign Up")
campaign.emails << campaign.emails.build(subject: "First Email", body: "Welcome", wait: 1.day)
campaign.emails << campaign.emails.build(subject: "Second Email", body: "Follow Up", wait: 1.week)
campaign.emails << campaign.emails.build(subject: "Third Email", body: "Hard Sell", wait: 2.days)
campaign.save!

json_options = {
  except: [:id, :created_at, :updated_at],
  include: {
    emails: {
      except: [:id, :campaign_id, :previous_email_id, :created_at, :updated_at]
    }
  }
}

Benchmark.bm do |x|
  x.report "Marshal to SignedGlobalID" do
    attributes = campaign.as_json(json_options)
    attributes["emails_attributes"] = attributes.delete("emails")
    attrs = UniversalID::HashWithGID.new(**attributes)
    param = attrs.to_sgid(for: "Promotion 123").to_param
  end

  attributes = campaign.as_json(json_options)
  attributes["emails_attributes"] = attributes.delete("emails")
  attrs = UniversalID::HashWithGID.new(**attributes)
  param = attrs.to_sgid(for: "Promotion 123").to_param

  x.report "Marshal from SignedGlobalID" do
    attrs = SignedGlobalID.parse(param, for: "Promotion 123").find
  end

  x.report "Marshal to SignedGlobalID (1k iterations)" do
    1_000.times do
      attributes = campaign.as_json(json_options)
      attributes["emails_attributes"] = attributes.delete("emails")
      attrs = UniversalID::HashWithGID.new(**attributes)
      param = attrs.to_sgid(for: "Promotion 123").to_param
    end
  end

  attributes = campaign.as_json(json_options)
  attributes["emails_attributes"] = attributes.delete("emails")
  attrs = UniversalID::HashWithGID.new(**attributes)
  param = attrs.to_sgid(for: "Promotion 123").to_param

  x.report "Marshal from SignedGlobalID (1k iterations)" do
    1_000.times do
      attrs = SignedGlobalID.parse(param, for: "Promotion 123").find
    end
  end
end
